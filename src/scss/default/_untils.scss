// ==========================================================================
// Вспомогательный функционал
// ==========================================================================

@function parseInt($n) {
    @return $n / ($n * 0 + 1);
}

@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

// Переводим число в rem
@function rem($values) {
    $px: ();
    $rem: ();

    @each $value in $values {

        @if $value == 0 or $value == auto {
            $px: append($px, $value);
            $rem: append($rem, $value);
        } @else {
            $unit: unit($value);
            $val: parseInt($value);

            @if $unit == "px" {
                $px: append($px, $value);
                $rem: append($rem, ($val / 10 + rem));
            }

            @if $unit == "rem" {
                $px: append($px, ($val * 10 + px));
                $rem: append($rem, $value);
            }
        }
    }

    @if $px == $rem {
        @return $px;
    } @else {
        @return $rem;
    }
}