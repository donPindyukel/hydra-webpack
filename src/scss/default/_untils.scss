// ==========================================================================
// Вспомогательный функционал
// ==========================================================================

@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

@function -zf-to-rem($value, $base: null) {
    @if type-of($value) != 'number' {
        @warn inspect($value) + ' was passed to rem-calc(), which is not a number.';
        @return $value;
    }

    @if unit($value) == 'em' {
        $value: strip-unit($value) * 1rem;
    }

    @if unit($value) != 'rem' {
        $value: strip-unit($value) / strip-unit($base) * 1rem;
    }

    @if $value == 0rem {
        $value: 0;
    }

    @return $value;
}

// Переводим число в rem
@function rem($values) {
    $rem-values: ();
    $count: length($values);
    $base: 16;

    @if unit($base) == '%' {
        $base: ($base / 100%) * 16px;
    }

    @if unit($base) == 'rem' {
        $base: strip-unit($base) * 16px;
    }

    @if $count == 1 {
        @return -zf-to-rem($values, $base);
    }

    @for $i from 1 through $count {
        $rem-values: append($rem-values, -zf-to-rem(nth($values, $i), $base));
    }

    @return $rem-values;
}
